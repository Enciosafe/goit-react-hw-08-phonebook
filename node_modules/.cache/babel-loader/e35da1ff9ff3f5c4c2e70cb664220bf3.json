{"ast":null,"code":"var _jsxFileName = \"/Users/finnegan/projects/projects/goit/react/goit-react-hw-07-phonebook/src/App.js\";\nimport React from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport contactsOperations from './redux/contacts/contacts-operations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  componentDidUpdate(prevProps, prevState) {\n    const KEY = 'contacts';\n\n    if (this.props.contacts !== prevProps.contacts) {\n      const data = JSON.stringify(this.props.contacts);\n      window.localStorage.setItem(KEY, data);\n    }\n  }\n\n  componentDidMount() {\n    contactsOperations.fetchContacts();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        contacts: this.props.contacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.contacts,\n  filter: state.contacts.filter\n});\n\nexport default connect(mapStateToProps)(App);\nApp.propTypes = {\n  filter: PropTypes.string,\n  contacts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string,\n    sex: PropTypes.string.isRequired\n  }))\n};","map":{"version":3,"sources":["/Users/finnegan/projects/projects/goit/react/goit-react-hw-07-phonebook/src/App.js"],"names":["React","ContactForm","ContactList","Filter","PropTypes","connect","contactsOperations","App","Component","componentDidUpdate","prevProps","prevState","KEY","props","contacts","data","JSON","stringify","window","localStorage","setItem","componentDidMount","fetchContacts","render","mapStateToProps","state","filter","propTypes","string","arrayOf","shape","id","isRequired","name","number","sex"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,kBAAP,MAA+B,sCAA/B;;;;AAIA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AAE9BC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACrC,UAAMC,GAAG,GAAG,UAAZ;;AACA,QAAI,KAAKC,KAAL,CAAWC,QAAX,KAAwBJ,SAAS,CAACI,QAAtC,EAAgD;AAC5C,YAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe,KAAKJ,KAAL,CAAWC,QAA1B,CAAb;AACAI,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BR,GAA5B,EAAiCG,IAAjC;AACH;AACJ;;AAEDM,EAAAA,iBAAiB,GAAG;AAChBf,IAAAA,kBAAkB,CAACgB,aAAnB;AACH;;AAEDC,EAAAA,MAAM,GACN;AACI,wBAAO;AAAA,8BACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADO,eAEH,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWC;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFG,eAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHG,eAIH,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAJG,eAKH,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cALG;AAAA,oBAAP;AAOL;;AAvB+B;;AA0BlC,MAAMU,eAAe,GAAGC,KAAK,KAAK;AAC9BX,EAAAA,QAAQ,EAAEW,KAAK,CAACX,QAAN,CAAeA,QADK;AAE9BY,EAAAA,MAAM,EAAED,KAAK,CAACX,QAAN,CAAeY;AAFO,CAAL,CAA7B;;AAOA,eAAerB,OAAO,CAACmB,eAAD,CAAP,CAAyBjB,GAAzB,CAAf;AAGAA,GAAG,CAACoB,SAAJ,GAAgB;AACZD,EAAAA,MAAM,EAAEtB,SAAS,CAACwB,MADN;AAEZd,EAAAA,QAAQ,EAAEV,SAAS,CAACyB,OAAV,CACNzB,SAAS,CAAC0B,KAAV,CAAgB;AACZC,IAAAA,EAAE,EAAE3B,SAAS,CAACwB,MAAV,CAAiBI,UADT;AAEZC,IAAAA,IAAI,EAAE7B,SAAS,CAACwB,MAAV,CAAiBI,UAFX;AAGZE,IAAAA,MAAM,EAAE9B,SAAS,CAACwB,MAHN;AAIZO,IAAAA,GAAG,EAAE/B,SAAS,CAACwB,MAAV,CAAiBI;AAJV,GAAhB,CADM;AAFE,CAAhB","sourcesContent":["import React from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport contactsOperations from './redux/contacts/contacts-operations'\n\n\n\nclass App extends React.Component {\n\n    componentDidUpdate(prevProps, prevState) {\n        const KEY = 'contacts'\n        if (this.props.contacts !== prevProps.contacts) {\n            const data = JSON.stringify(this.props.contacts)\n            window.localStorage.setItem(KEY, data)\n        }\n    }\n\n    componentDidMount() {\n        contactsOperations.fetchContacts()\n    }\n\n    render()\n    {\n        return <>\n        <h1>Phonebook</h1>\n            <ContactForm contacts={this.props.contacts}/>\n            <h2>Contacts</h2>\n            <Filter/>\n            <ContactList/>\n        </>\n  }\n}\n\nconst mapStateToProps = state => ({\n    contacts: state.contacts.contacts,\n    filter: state.contacts.filter,\n})\n\n\n\nexport default connect(mapStateToProps)(App);\n\n\nApp.propTypes = {\n    filter: PropTypes.string,\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string,\n            sex: PropTypes.string.isRequired\n        })\n    )\n};\n\n\n"]},"metadata":{},"sourceType":"module"}