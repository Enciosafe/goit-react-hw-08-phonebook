{"ast":null,"code":"var _jsxFileName = \"/Users/finnegan/projects/projects/goit/react/goit-react-hw-08-phonebook/src/App.js\";\nimport React from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport contactsOperations from './redux/contacts/contacts-operations';\nimport contactSelectors from './redux/contacts/contacts-selectors';\nimport AppBar from \"./components/AppBar/AppBar\";\nimport s from \"./App.module.css\";\nimport { Switch, Route } from 'react-router-dom';\nimport Home from \"./components/Home/Home\";\nimport Registration from \"./components/Registration/Registration\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.container,\n        children: /*#__PURE__*/_jsxDEV(AppBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: '/',\n          component: Home\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: '/registration',\n          component: Registration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        contacts: this.props.contacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), this.props.contacts.length > 1 && /*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 48\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  contacts: contactSelectors.getContacts(state),\n  filter: contactSelectors.getFilter(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\nApp.propTypes = {\n  filter: PropTypes.string,\n  contacts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string,\n    sex: PropTypes.string.isRequired\n  }))\n};","map":{"version":3,"sources":["/Users/finnegan/projects/projects/goit/react/goit-react-hw-08-phonebook/src/App.js"],"names":["React","ContactForm","ContactList","Filter","PropTypes","connect","contactsOperations","contactSelectors","AppBar","s","Switch","Route","Home","Registration","App","Component","componentDidMount","props","fetchContacts","render","container","contacts","length","mapStateToProps","state","getContacts","filter","getFilter","mapDispatchToProps","dispatch","propTypes","string","arrayOf","shape","id","isRequired","name","number","sex"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,kBAAP,MAA+B,sCAA/B;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,CAAP,MAAc,kBAAd;AACA,SAAQC,MAAR,EAAgBC,KAAhB,QAA4B,kBAA5B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,YAAP,MAAyB,wCAAzB;;;;AAMA,MAAMC,GAAN,SAAkBd,KAAK,CAACe,SAAxB,CAAkC;AAG9BC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWC,aAAX;AACH;;AAEDC,EAAAA,MAAM,GACN;AACI,wBAAO;AAAA,8BACH;AAAK,QAAA,SAAS,EAAEV,CAAC,CAACW,SAAlB;AAAA,+BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADG,eAKH,QAAC,MAAD;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAE,GAAnB;AAAwB,UAAA,SAAS,EAAER;AAAnC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAE,eAAb;AAA8B,UAAA,SAAS,EAAEC;AAAzC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALG,eAUH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVG,eAWH,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAE,KAAKI,KAAL,CAAWI;AAAlC;AAAA;AAAA;AAAA;AAAA,cAXG,eAYH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZG,EAaF,KAAKJ,KAAL,CAAWI,QAAX,CAAoBC,MAApB,GAA6B,CAA7B,iBAAkC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAbhC,eAcH,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAdG;AAAA,oBAAP;AAgBL;;AAzB+B;;AA4BlC,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BH,EAAAA,QAAQ,EAAEd,gBAAgB,CAACkB,WAAjB,CAA6BD,KAA7B,CADoB;AAE9BE,EAAAA,MAAM,EAAEnB,gBAAgB,CAACoB,SAAjB,CAA2BH,KAA3B;AAFsB,CAAL,CAA7B;;AAMA,MAAMI,kBAAkB,GAAGC,QAAQ,KAAK;AACpCX,EAAAA,aAAa,EAAE,MAAMW,QAAQ,CAACvB,kBAAkB,CAACY,aAAnB,EAAD;AADO,CAAL,CAAnC;;AAKA,eAAeb,OAAO,CAACkB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6Cd,GAA7C,CAAf;AAGAA,GAAG,CAACgB,SAAJ,GAAgB;AACZJ,EAAAA,MAAM,EAAEtB,SAAS,CAAC2B,MADN;AAEZV,EAAAA,QAAQ,EAAEjB,SAAS,CAAC4B,OAAV,CACN5B,SAAS,CAAC6B,KAAV,CAAgB;AACZC,IAAAA,EAAE,EAAE9B,SAAS,CAAC2B,MAAV,CAAiBI,UADT;AAEZC,IAAAA,IAAI,EAAEhC,SAAS,CAAC2B,MAAV,CAAiBI,UAFX;AAGZE,IAAAA,MAAM,EAAEjC,SAAS,CAAC2B,MAHN;AAIZO,IAAAA,GAAG,EAAElC,SAAS,CAAC2B,MAAV,CAAiBI;AAJV,GAAhB,CADM;AAFE,CAAhB","sourcesContent":["import React from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport contactsOperations from './redux/contacts/contacts-operations'\nimport contactSelectors from './redux/contacts/contacts-selectors'\nimport AppBar from \"./components/AppBar/AppBar\";\nimport s from \"./App.module.css\"\nimport {Switch, Route} from 'react-router-dom'\nimport Home from \"./components/Home/Home\";\nimport Registration from \"./components/Registration/Registration\";\n\n\n\n\n\nclass App extends React.Component {\n\n\n    componentDidMount() {\n        this.props.fetchContacts()\n    }\n\n    render()\n    {\n        return <>\n            <div className={s.container}>\n                <AppBar/>\n            </div>\n\n            <Switch>\n                <Route exact path={'/'} component={Home}/>\n                <Route path={'/registration'} component={Registration} />\n            </Switch>\n\n            <h1>Phonebook</h1>\n            <ContactForm contacts={this.props.contacts}/>\n            <h2>Contacts</h2>\n            {this.props.contacts.length > 1 && <Filter/>}\n            <ContactList/>\n        </>\n  }\n}\n\nconst mapStateToProps = state => ({\n    contacts: contactSelectors.getContacts(state),\n    filter: contactSelectors.getFilter(state),\n})\n\n\nconst mapDispatchToProps = dispatch => ({\n    fetchContacts: () => dispatch(contactsOperations.fetchContacts())\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\nApp.propTypes = {\n    filter: PropTypes.string,\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string,\n            sex: PropTypes.string.isRequired\n        })\n    )\n};\n\n\n"]},"metadata":{},"sourceType":"module"}