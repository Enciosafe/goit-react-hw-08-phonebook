{"ast":null,"code":"import _regeneratorRuntime from\"/Users/finnegan/projects/projects/goit/react/goit-react-hw-07-phonebook/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/finnegan/projects/projects/goit/react/goit-react-hw-07-phonebook/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from\"axios\";import actions from'./contacts-actions';axios.defaults.baseURL='http://localhost:3000/';// const fetchContacts = () => dispatch => {\n//     dispatch(actions.fetchContactRequest());\n//\n//     axios.get('/contacts')\n//         .then(({data}) => dispatch(actions.fetchContactSuccess(data)))\n//         .catch(error => dispatch(actions.fetchContactError(error)))\n// }\nvar fetchContacts=function fetchContacts(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var _yield$axios$get,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch(actions.fetchContactRequest());_context.prev=1;_context.next=4;return axios.get('/contacts');case 4:_yield$axios$get=_context.sent;data=_yield$axios$get.data;dispatch(actions.fetchContactSuccess(data));_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](1);dispatch(actions.fetchContactError(_context.t0));case 12:case\"end\":return _context.stop();}}},_callee,null,[[1,9]]);}));return function(_x){return _ref.apply(this,arguments);};}();};var addContact=function addContact(item){return function(dispatch){dispatch(actions.addContactRequest());axios.post('/contacts',item).then(function(_ref2){var data=_ref2.data;return dispatch(actions.addContactSuccess(data));}).catch(function(error){return dispatch(actions.addContactError(error));});};};var delContact=function delContact(id){return function(dispatch){dispatch(actions.delContactRequest());axios.delete(\"/contacts/\".concat(id)).then(function(){return dispatch(actions.delContactSuccess(id));}).catch(function(error){return dispatch(actions.delContactError(error));});};};export default{addContact:addContact,delContact:delContact,fetchContacts:fetchContacts};","map":{"version":3,"sources":["/Users/finnegan/projects/projects/goit/react/goit-react-hw-07-phonebook/src/redux/contacts/contacts-operations.js"],"names":["axios","actions","defaults","baseURL","fetchContacts","dispatch","fetchContactRequest","get","data","fetchContactSuccess","fetchContactError","addContact","item","addContactRequest","post","then","addContactSuccess","catch","error","addContactError","delContact","id","delContactRequest","delete","delContactSuccess","delContactError"],"mappings":"iTAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CAEAD,KAAK,CAACE,QAAN,CAAeC,OAAf,CAAyB,wBAAzB,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,kGAAM,iBAAMC,QAAN,4IACxBA,QAAQ,CAACJ,OAAO,CAACK,mBAAR,EAAD,CAAR,CADwB,sCAICN,CAAAA,KAAK,CAACO,GAAN,CAAU,WAAV,CAJD,uCAIbC,IAJa,kBAIbA,IAJa,CAKpBH,QAAQ,CAACJ,OAAO,CAACQ,mBAAR,CAA4BD,IAA5B,CAAD,CAAR,CALoB,+EAOpBH,QAAQ,CAACJ,OAAO,CAACS,iBAAR,aAAD,CAAR,CAPoB,oEAAN,gEAAtB,CAaA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,IAAI,QAAI,UAAAP,QAAQ,CAAI,CACnCA,QAAQ,CAACJ,OAAO,CAACY,iBAAR,EAAD,CAAR,CAEAb,KAAK,CACAc,IADL,CACU,WADV,CACuBF,IADvB,EAEKG,IAFL,CAEU,mBAAGP,CAAAA,IAAH,OAAGA,IAAH,OAAcH,CAAAA,QAAQ,CAACJ,OAAO,CAACe,iBAAR,CAA0BR,IAA1B,CAAD,CAAtB,EAFV,EAGKS,KAHL,CAGW,SAAAC,KAAK,QAAIb,CAAAA,QAAQ,CAACJ,OAAO,CAACkB,eAAR,CAAwBD,KAAxB,CAAD,CAAZ,EAHhB,EAIH,CAPsB,EAAvB,CAUA,GAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,EAAE,QAAI,UAAAhB,QAAQ,CAAI,CACjCA,QAAQ,CAACJ,OAAO,CAACqB,iBAAR,EAAD,CAAR,CAEAtB,KAAK,CACAuB,MADL,qBACyBF,EADzB,GAEKN,IAFL,CAEU,iBAAMV,CAAAA,QAAQ,CAACJ,OAAO,CAACuB,iBAAR,CAA0BH,EAA1B,CAAD,CAAd,EAFV,EAGKJ,KAHL,CAGW,SAAAC,KAAK,QAAIb,CAAAA,QAAQ,CAACJ,OAAO,CAACwB,eAAR,CAAwBP,KAAxB,CAAD,CAAZ,EAHhB,EAKH,CARoB,EAArB,CAWA,cAAe,CAACP,UAAU,CAAVA,UAAD,CAAaS,UAAU,CAAVA,UAAb,CAAyBhB,aAAa,CAAbA,aAAzB,CAAf","sourcesContent":["import axios from \"axios\";\nimport actions from './contacts-actions'\n\naxios.defaults.baseURL = 'http://localhost:3000/'\n\n\n\n\n\n// const fetchContacts = () => dispatch => {\n//     dispatch(actions.fetchContactRequest());\n//\n//     axios.get('/contacts')\n//         .then(({data}) => dispatch(actions.fetchContactSuccess(data)))\n//         .catch(error => dispatch(actions.fetchContactError(error)))\n// }\n\nconst fetchContacts = () => async dispatch => {\n    dispatch(actions.fetchContactRequest());\n\n    try {\n        const {data} = await axios.get('/contacts')\n        dispatch(actions.fetchContactSuccess(data))\n    } catch (error) {\n        dispatch(actions.fetchContactError(error))\n    }\n}\n\n\n\nconst addContact = item => dispatch => {\n    dispatch(actions.addContactRequest());\n\n    axios\n        .post('/contacts', item)\n        .then(({ data }) => dispatch(actions.addContactSuccess(data)))\n        .catch(error => dispatch(actions.addContactError(error)));\n}\n\n\nconst delContact = id => dispatch => {\n    dispatch(actions.delContactRequest());\n\n    axios\n        .delete(`/contacts/${id}`)\n        .then(() => dispatch(actions.delContactSuccess(id)))\n        .catch(error => dispatch(actions.delContactError(error)))\n\n}\n\n\nexport default {addContact, delContact, fetchContacts}"]},"metadata":{},"sourceType":"module"}