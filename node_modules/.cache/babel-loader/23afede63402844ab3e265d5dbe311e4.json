{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\nconst KEY = 'contacts';\nconst data = window.localStorage.getItem(KEY) || '[]'; // const initialItems = JSON.parse(data)\n\nconst contacts = createReducer([], {\n  [actions.addContact]: (state, {\n    payload\n  }) => [...state, payload],\n  [actions.delContact]: (state, {\n    payload\n  }) => state.filter(contact => contact.id !== payload)\n});\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, {\n    payload\n  }) => payload\n});\nexport default combineReducers({\n  contacts,\n  filter\n}); // const contacts = (state = initialItems, {type, payload}) => {\n//     switch (type) {\n//         case types.ADD:\n//             return [...state, payload]\n//         case types.DEL:\n//             return state.filter(contact => contact.id !== payload)\n//         default:\n//             return state\n//\n//     }\n// }\n// const filter = (state = '', {type, payload}) => {\n//     switch (type) {\n//         case types.FILTER:\n//             return payload\n//         default:\n//             return state\n//\n//     }\n// }","map":{"version":3,"sources":["/Users/finnegan/projects/projects/goit/react/goit-react-hw-07-phonebook/src/redux/contacts/contacts-reducer.js"],"names":["combineReducers","createReducer","actions","KEY","data","window","localStorage","getItem","contacts","addContact","state","payload","delContact","filter","contact","id","changeFilter","_"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,OAA9B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAGA,MAAMC,GAAG,GAAG,UAAZ;AACA,MAAMC,IAAI,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BJ,GAA5B,KAAoC,IAAjD,C,CACA;;AAGA,MAAMK,QAAQ,GAAGP,aAAa,CAAC,EAAD,EAAK;AAC/B,GAACC,OAAO,CAACO,UAAT,GAAsB,CAACC,KAAD,EAAQ;AAACC,IAAAA;AAAD,GAAR,KAAsB,CAAC,GAAGD,KAAJ,EAAWC,OAAX,CADb;AAE/B,GAACT,OAAO,CAACU,UAAT,GAAsB,CAACF,KAAD,EAAQ;AAACC,IAAAA;AAAD,GAAR,KAAsBD,KAAK,CAACG,MAAN,CAAaC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeJ,OAAvC;AAFb,CAAL,CAA9B;AAMA,MAAME,MAAM,GAAGZ,aAAa,CAAC,EAAD,EAAK;AAC7B,GAACC,OAAO,CAACc,YAAT,GAAwB,CAACC,CAAD,EAAI;AAACN,IAAAA;AAAD,GAAJ,KAAkBA;AADb,CAAL,CAA5B;AAIA,eAAeX,eAAe,CAAC;AAC3BQ,EAAAA,QAD2B;AAE3BK,EAAAA;AAF2B,CAAD,CAA9B,C,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {combineReducers} from \"redux\";\nimport { createReducer } from '@reduxjs/toolkit'\nimport actions from './contacts-actions'\n\n\nconst KEY = 'contacts'\nconst data = window.localStorage.getItem(KEY) || '[]';\n// const initialItems = JSON.parse(data)\n\n\nconst contacts = createReducer([], {\n    [actions.addContact]: (state, {payload}) => [...state, payload],\n    [actions.delContact]: (state, {payload}) => state.filter(contact => contact.id !== payload),\n})\n\n\nconst filter = createReducer('', {\n    [actions.changeFilter]: (_, {payload}) => payload,\n})\n\nexport default combineReducers({\n    contacts,\n    filter,\n})\n\n\n// const contacts = (state = initialItems, {type, payload}) => {\n//     switch (type) {\n//         case types.ADD:\n//             return [...state, payload]\n//         case types.DEL:\n//             return state.filter(contact => contact.id !== payload)\n//         default:\n//             return state\n//\n//     }\n// }\n// const filter = (state = '', {type, payload}) => {\n//     switch (type) {\n//         case types.FILTER:\n//             return payload\n//         default:\n//             return state\n//\n//     }\n// }\n\n"]},"metadata":{},"sourceType":"module"}