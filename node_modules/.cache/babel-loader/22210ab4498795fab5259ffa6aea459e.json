{"ast":null,"code":"var _jsxFileName = \"/Users/finnegan/projects/projects/goit/react/goit-react-hw-08-phonebook/src/components/PublicRoute.js\";\nimport React, { Component } from 'react';\nimport { Redirect, Route } from \"react-router-dom\";\nimport { authSelectors } from \"../redux/auth\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  ...routeProps\n}) => /*#__PURE__*/_jsxDEV(Route, { ...routeProps,\n  render: props => isAuthenticated && routeProps.restricted ? /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/contacts\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(Component, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 13\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 5\n}, this);\n\n_c = PublicRoute;\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state)\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n\nvar _c;\n\n$RefreshReg$(_c, \"PublicRoute\");","map":{"version":3,"sources":["/Users/finnegan/projects/projects/goit/react/goit-react-hw-08-phonebook/src/components/PublicRoute.js"],"names":["React","Component","Redirect","Route","authSelectors","connect","PublicRoute","component","isAuthenticated","routeProps","props","restricted","mapStateToProps","state","getIsAuthenticated"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,QAAR,EAAkBC,KAAlB,QAA8B,kBAA9B;AACA,SAAQC,aAAR,QAA4B,eAA5B;AACA,SAAQC,OAAR,QAAsB,aAAtB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AACjBC,EAAAA,SAAS,EAAEN,SADM;AAEjBO,EAAAA,eAFiB;AAGjB,KAAGC;AAHc,CAAD,kBAKhB,QAAC,KAAD,OACQA,UADR;AAEI,EAAA,MAAM,EAAEC,KAAK,IACbF,eAAe,IAAIC,UAAU,CAACE,UAA9B,gBACI,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UADJ,gBAGI,QAAC,SAAD,OAAeD;AAAf;AAAA;AAAA;AAAA;AAAA;AANR;AAAA;AAAA;AAAA;AAAA,QALJ;;KAAMJ,W;;AAiBN,MAAMM,eAAe,GAAGC,KAAK,KAAK;AAC9BL,EAAAA,eAAe,EAAEJ,aAAa,CAACU,kBAAd,CAAiCD,KAAjC;AADa,CAAL,CAA7B;;AAIA,eAAeR,OAAO,CAACO,eAAD,CAAP,CAAyBN,WAAzB,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Redirect, Route} from \"react-router-dom\";\nimport {authSelectors} from \"../redux/auth\";\nimport {connect} from \"react-redux\";\n\nconst PublicRoute = ({\n    component: Component,\n    isAuthenticated,\n    ...routeProps\n}) => (\n    <Route\n        {...routeProps}\n        render={props =>\n        isAuthenticated && routeProps.restricted ? (\n            <Redirect to='/contacts' />\n        ) : (\n            <Component {...props} />\n            )\n        }\n    />\n);\n\nconst mapStateToProps = state => ({\n    isAuthenticated: authSelectors.getIsAuthenticated(state),\n})\n\nexport default connect(mapStateToProps)(PublicRoute);"]},"metadata":{},"sourceType":"module"}