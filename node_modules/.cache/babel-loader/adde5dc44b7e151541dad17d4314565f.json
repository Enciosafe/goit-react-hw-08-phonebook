{"ast":null,"code":"var _jsxFileName = \"/Users/finnegan/projects/projects/goit/react/goit-react-hw-08-phonebook/src/components/PhoneBook/Phonebook.js\";\nimport React from \"react\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { contactsOperations } from \"../../redux/contacts\";\nimport { contactsSelectors } from \"../../redux/contacts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Phonebook extends React.Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        contacts: this.props.contacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), this.props.contacts.length > 1 && /*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 48\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getContacts(state),\n  filter: contactsSelectors.getFilter(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\nPhonebook.propTypes = {\n  filter: PropTypes.string,\n  contacts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string,\n    sex: PropTypes.string.isRequired\n  }))\n};","map":{"version":3,"sources":["/Users/finnegan/projects/projects/goit/react/goit-react-hw-08-phonebook/src/components/PhoneBook/Phonebook.js"],"names":["React","ContactForm","ContactList","Filter","PropTypes","connect","contactsOperations","contactsSelectors","Phonebook","Component","componentDidMount","props","fetchContacts","render","contacts","length","mapStateToProps","state","getContacts","filter","getFilter","mapDispatchToProps","dispatch","propTypes","string","arrayOf","shape","id","isRequired","name","number","sex"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,kBAAR,QAAiC,sBAAjC;AACA,SAAQC,iBAAR,QAAgC,sBAAhC;;;;AAGA,MAAMC,SAAN,SAAwBR,KAAK,CAACS,SAA9B,CAAwC;AAGpCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWC,aAAX;AACH;;AAEDC,EAAAA,MAAM,GACN;AACI,wBAAO;AAAA,8BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADG,eAEH,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFG,eAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHG,EAIF,KAAKH,KAAL,CAAWG,QAAX,CAAoBC,MAApB,GAA6B,CAA7B,iBAAkC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAJhC,eAKH,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cALG;AAAA,oBAAP;AAOH;;AAhBmC;;AAmBxC,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BH,EAAAA,QAAQ,EAAEP,iBAAiB,CAACW,WAAlB,CAA8BD,KAA9B,CADoB;AAE9BE,EAAAA,MAAM,EAAEZ,iBAAiB,CAACa,SAAlB,CAA4BH,KAA5B;AAFsB,CAAL,CAA7B;;AAMA,MAAMI,kBAAkB,GAAGC,QAAQ,KAAK;AACpCV,EAAAA,aAAa,EAAE,MAAMU,QAAQ,CAAChB,kBAAkB,CAACM,aAAnB,EAAD;AADO,CAAL,CAAnC;;AAKA,eAAeP,OAAO,CAACW,eAAD,EAAkBK,kBAAlB,CAAP,CAA6Cb,SAA7C,CAAf;AAGAA,SAAS,CAACe,SAAV,GAAsB;AAClBJ,EAAAA,MAAM,EAAEf,SAAS,CAACoB,MADA;AAElBV,EAAAA,QAAQ,EAAEV,SAAS,CAACqB,OAAV,CACNrB,SAAS,CAACsB,KAAV,CAAgB;AACZC,IAAAA,EAAE,EAAEvB,SAAS,CAACoB,MAAV,CAAiBI,UADT;AAEZC,IAAAA,IAAI,EAAEzB,SAAS,CAACoB,MAAV,CAAiBI,UAFX;AAGZE,IAAAA,MAAM,EAAE1B,SAAS,CAACoB,MAHN;AAIZO,IAAAA,GAAG,EAAE3B,SAAS,CAACoB,MAAV,CAAiBI;AAJV,GAAhB,CADM;AAFQ,CAAtB","sourcesContent":["\nimport React from \"react\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport {contactsOperations} from \"../../redux/contacts\";\nimport {contactsSelectors} from \"../../redux/contacts\";\n\n\nclass Phonebook extends React.Component {\n\n\n    componentDidMount() {\n        this.props.fetchContacts()\n    }\n\n    render()\n    {\n        return <>\n            <h1>Phonebook</h1>\n            <ContactForm contacts={this.props.contacts}/>\n            <h2>Contacts</h2>\n            {this.props.contacts.length > 1 && <Filter/>}\n            <ContactList/>\n        </>\n    }\n}\n\nconst mapStateToProps = state => ({\n    contacts: contactsSelectors.getContacts(state),\n    filter: contactsSelectors.getFilter(state),\n})\n\n\nconst mapDispatchToProps = dispatch => ({\n    fetchContacts: () => dispatch(contactsOperations.fetchContacts())\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\n\n\nPhonebook.propTypes = {\n    filter: PropTypes.string,\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string,\n            sex: PropTypes.string.isRequired\n        })\n    )\n};\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}