{"ast":null,"code":"var _jsxFileName = \"/Users/finnegan/projects/projects/goit/react/goit-react-hw-07-phonebook/src/App.js\";\nimport React from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport contactsOperations from './redux/contacts/contacts-operations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    contactsOperations.fetchContacts();\n  } // componentDidUpdate(prevProps, prevState) {\n  //     const KEY = 'contacts'\n  //     if (this.props.contacts !== prevProps.contacts) {\n  //         const data = JSON.stringify(this.props.contacts)\n  //         window.localStorage.setItem(KEY, data)\n  //     }\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        contacts: this.props.contacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.contacts,\n  filter: state.contacts.filter\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\nApp.propTypes = {\n  filter: PropTypes.string,\n  contacts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string,\n    sex: PropTypes.string.isRequired\n  }))\n};","map":{"version":3,"sources":["/Users/finnegan/projects/projects/goit/react/goit-react-hw-07-phonebook/src/App.js"],"names":["React","ContactForm","ContactList","Filter","PropTypes","connect","contactsOperations","App","Component","componentDidMount","fetchContacts","render","props","contacts","mapStateToProps","state","filter","mapDispatchToProps","dispatch","propTypes","string","arrayOf","shape","id","isRequired","name","number","sex"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,kBAAP,MAA+B,sCAA/B;;;;AAKA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AAG9BC,EAAAA,iBAAiB,GAAG;AAChBH,IAAAA,kBAAkB,CAACI,aAAnB;AACH,GAL6B,CAO9B;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,MAAM,GACN;AACI,wBAAO;AAAA,8BACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADO,eAEH,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFG,eAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHG,eAIH,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAJG,eAKH,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cALG;AAAA,oBAAP;AAOL;;AAxB+B;;AA2BlC,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BF,EAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeA,QADK;AAE9BG,EAAAA,MAAM,EAAED,KAAK,CAACF,QAAN,CAAeG;AAFO,CAAL,CAA7B;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpCR,EAAAA,aAAa,EAAE,MAAMQ,QAAQ,CAACZ,kBAAkB,CAACI,aAAnB,EAAD;AADO,CAAL,CAAnC;;AAKA,eAAeL,OAAO,CAACS,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CV,GAA7C,CAAf;AAGAA,GAAG,CAACY,SAAJ,GAAgB;AACZH,EAAAA,MAAM,EAAEZ,SAAS,CAACgB,MADN;AAEZP,EAAAA,QAAQ,EAAET,SAAS,CAACiB,OAAV,CACNjB,SAAS,CAACkB,KAAV,CAAgB;AACZC,IAAAA,EAAE,EAAEnB,SAAS,CAACgB,MAAV,CAAiBI,UADT;AAEZC,IAAAA,IAAI,EAAErB,SAAS,CAACgB,MAAV,CAAiBI,UAFX;AAGZE,IAAAA,MAAM,EAAEtB,SAAS,CAACgB,MAHN;AAIZO,IAAAA,GAAG,EAAEvB,SAAS,CAACgB,MAAV,CAAiBI;AAJV,GAAhB,CADM;AAFE,CAAhB","sourcesContent":["import React from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport contactsOperations from './redux/contacts/contacts-operations'\n\n\n\n\nclass App extends React.Component {\n\n\n    componentDidMount() {\n        contactsOperations.fetchContacts()\n    }\n\n    // componentDidUpdate(prevProps, prevState) {\n    //     const KEY = 'contacts'\n    //     if (this.props.contacts !== prevProps.contacts) {\n    //         const data = JSON.stringify(this.props.contacts)\n    //         window.localStorage.setItem(KEY, data)\n    //     }\n    // }\n\n    render()\n    {\n        return <>\n        <h1>Phonebook</h1>\n            <ContactForm contacts={this.props.contacts}/>\n            <h2>Contacts</h2>\n            <Filter/>\n            <ContactList/>\n        </>\n  }\n}\n\nconst mapStateToProps = state => ({\n    contacts: state.contacts.contacts,\n    filter: state.contacts.filter,\n})\n\n\nconst mapDispatchToProps = dispatch => ({\n    fetchContacts: () => dispatch(contactsOperations.fetchContacts())\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\nApp.propTypes = {\n    filter: PropTypes.string,\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string,\n            sex: PropTypes.string.isRequired\n        })\n    )\n};\n\n\n"]},"metadata":{},"sourceType":"module"}