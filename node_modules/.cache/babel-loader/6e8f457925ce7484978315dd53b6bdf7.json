{"ast":null,"code":"var _jsxFileName = \"/Users/finnegan/projects/projects/goit/react/goit-react-hw-08-phonebook/src/components/PrivateRoute.js\";\nimport React, { Component } from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport { authSelectors } from \"../redux/auth\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => /*#__PURE__*/_jsxDEV(Route, { ...routeProps,\n  render: props => isAuthenticated ? /*#__PURE__*/_jsxDEV(Component, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 31\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: '/login'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 58\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 5\n}, this);\n\n_c = PrivateRoute;\n\nconst mapDispatchToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state)\n});\n\nexport default connect(mapDispatchToProps)(PrivateRoute);\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/finnegan/projects/projects/goit/react/goit-react-hw-08-phonebook/src/components/PrivateRoute.js"],"names":["React","Component","Route","Redirect","authSelectors","connect","PrivateRoute","component","isAuthenticated","redirectTo","routeProps","props","mapDispatchToProps","state","getIsAuthenticated"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,kBAA9B;AACA,SAAQC,aAAR,QAA4B,eAA5B;AACA,SAAQC,OAAR,QAAsB,aAAtB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAClBC,EAAAA,SAAS,EAAEN,SADO;AAElBO,EAAAA,eAFkB;AAGlBC,EAAAA,UAHkB;AAIlB,KAAGC;AAJe,CAAD,kBAMjB,QAAC,KAAD,OACQA,UADR;AAEI,EAAA,MAAM,EAAEC,KAAK,IACTH,eAAe,gBAAG,QAAC,SAAD,OAAeG;AAAf;AAAA;AAAA;AAAA;AAAA,UAAH,gBAA8B,QAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA;AAHrD;AAAA;AAAA;AAAA;AAAA,QANJ;;KAAML,Y;;AAcN,MAAMM,kBAAkB,GAAGC,KAAK,KAAK;AACjCL,EAAAA,eAAe,EAAEJ,aAAa,CAACU,kBAAd,CAAiCD,KAAjC;AADgB,CAAL,CAAhC;;AAIA,eAAeR,OAAO,CAACO,kBAAD,CAAP,CAA4BN,YAA5B,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Route, Redirect} from \"react-router-dom\";\nimport {authSelectors} from \"../redux/auth\";\nimport {connect} from \"react-redux\";\n\nconst PrivateRoute = ({\n    component: Component,\n    isAuthenticated,\n    redirectTo,\n    ...routeProps\n}) => (\n    <Route\n        {...routeProps}\n        render={props =>\n            isAuthenticated ? <Component {...props} /> : <Redirect to={'/login'}/>\n        }\n      />\n);\n\nconst mapDispatchToProps = state => ({\n    isAuthenticated: authSelectors.getIsAuthenticated(state)\n})\n\nexport default connect(mapDispatchToProps)(PrivateRoute);"]},"metadata":{},"sourceType":"module"}