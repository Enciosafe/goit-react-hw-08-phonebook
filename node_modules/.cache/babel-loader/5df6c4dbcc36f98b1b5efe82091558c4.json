{"ast":null,"code":"import React from\"react\";import{connect}from\"react-redux\";import contactsActions from'./../../redux/contacts/contacts-actions';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Filter=function Filter(_ref){var handlerFilter=_ref.handlerFilter,filter=_ref.filter;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{children:\"Find contacts by name:\"}),/*#__PURE__*/_jsx(\"input\",{onChange:handlerFilter,type:\"text\",value:filter})]});};var mapStateToProps=function mapStateToProps(state){return{filter:state.contacts.filter};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{handlerFilter:function handlerFilter(e){return dispatch(contactsActions.changeFilter(e.target.value));}};};export default connect(mapStateToProps,mapDispatchToProps)(Filter);","map":{"version":3,"sources":["/Users/finnegan/projects/projects/goit/react/goit-react-hw-07-phonebook/src/components/Filter/Filter.js"],"names":["React","connect","contactsActions","Filter","handlerFilter","filter","mapStateToProps","state","contacts","mapDispatchToProps","dispatch","e","changeFilter","target","value"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,MAAOC,CAAAA,eAAP,KAA4B,yCAA5B,C,6IAGA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAA6B,IAA3BC,CAAAA,aAA2B,MAA3BA,aAA2B,CAAZC,MAAY,MAAZA,MAAY,CACxC,mBAAO,wCACH,6CADG,cAEH,cAAO,QAAQ,CAAED,aAAjB,CACO,IAAI,CAAC,MADZ,CAEO,KAAK,CAAEC,MAFd,EAFG,GAAP,CAKH,CAND,CAQA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAC9BF,MAAM,CAAEE,KAAK,CAACC,QAAN,CAAeH,MADO,CAAL,EAA7B,CAGA,GAAMI,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,QAAK,CACpCN,aAAa,CAAE,uBAACO,CAAD,QAAOD,CAAAA,QAAQ,CAACR,eAAe,CAACU,YAAhB,CAA6BD,CAAC,CAACE,MAAF,CAASC,KAAtC,CAAD,CAAf,EADqB,CAAL,EAAnC,CAIA,cAAeb,CAAAA,OAAO,CAACK,eAAD,CAAkBG,kBAAlB,CAAP,CAA6CN,MAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport contactsActions from './../../redux/contacts/contacts-actions'\n\n\nconst Filter = ({handlerFilter, filter}) => {\n    return <>\n        <p>Find contacts by name:</p>\n        <input onChange={handlerFilter}\n               type=\"text\"\n               value={filter}/></>\n}\n\nconst mapStateToProps = state => ({\n    filter: state.contacts.filter\n})\nconst mapDispatchToProps = dispatch => ({\n    handlerFilter: (e) => dispatch(contactsActions.changeFilter(e.target.value))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter)"]},"metadata":{},"sourceType":"module"}