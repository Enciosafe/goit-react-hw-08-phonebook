{"ast":null,"code":"import{createSelector}from\"@reduxjs/toolkit\";var getContacts=function getContacts(state){return state.contacts.contacts;};var getFilter=function getFilter(state){return state.contacts.filter;};var getAllContacts=function getAllContacts(state){return state.contacts.contacts;};// const getVisibleContacts = state => {\n//     const contacts = getAllContacts(state)\n//     const filter = getFilter(state)\n//\n//     const lowerFilter = filter.toLowerCase()\n//\n//     return contacts.filter(contact =>\n//         contact.name.toLowerCase().includes(lowerFilter))\n// }\nvar getVisibleContacts=createSelector([getAllContacts,getFilter],function(contacts,filter){var lowerFilter=filter.toLowerCase();return contacts.filter(function(contact){return contact.name.toLowerCase().includes(lowerFilter);});});export default{getContacts:getContacts,getFilter:getFilter,getVisibleContacts:getVisibleContacts};","map":{"version":3,"sources":["/Users/finnegan/projects/projects/goit/react/goit-react-hw-07-phonebook/src/redux/contacts/contacts-selectors.js"],"names":["createSelector","getContacts","state","contacts","getFilter","filter","getAllContacts","getVisibleContacts","lowerFilter","toLowerCase","contact","name","includes"],"mappings":"AAAA,OAASA,cAAT,KAA+B,kBAA/B,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,QAAN,CAAeA,QAAnB,EAAzB,CACA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAF,KAAK,QAAIA,CAAAA,KAAK,CAACC,QAAN,CAAeE,MAAnB,EAAvB,CACA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAJ,KAAK,QAAIA,CAAAA,KAAK,CAACC,QAAN,CAAeA,QAAnB,EAA5B,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMI,CAAAA,kBAAkB,CAAGP,cAAc,CAAC,CAACM,cAAD,CAAiBF,SAAjB,CAAD,CACrC,SAACD,QAAD,CAAWE,MAAX,CAAsB,CAClB,GAAMG,CAAAA,WAAW,CAAGH,MAAM,CAACI,WAAP,EAApB,CAEA,MAAON,CAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAAK,OAAO,QAC1BA,CAAAA,OAAO,CAACC,IAAR,CAAaF,WAAb,GAA2BG,QAA3B,CAAoCJ,WAApC,CAD0B,EAAvB,CAAP,CAEH,CANoC,CAAzC,CASA,cAAe,CAAEP,WAAW,CAAXA,WAAF,CAAeG,SAAS,CAATA,SAAf,CAA0BG,kBAAkB,CAAlBA,kBAA1B,CAAf","sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getContacts = state => state.contacts.contacts\nconst getFilter = state => state.contacts.filter\nconst getAllContacts = state => state.contacts.contacts\n\n\n// const getVisibleContacts = state => {\n//     const contacts = getAllContacts(state)\n//     const filter = getFilter(state)\n//\n//     const lowerFilter = filter.toLowerCase()\n//\n//     return contacts.filter(contact =>\n//         contact.name.toLowerCase().includes(lowerFilter))\n// }\n\nconst getVisibleContacts = createSelector([getAllContacts, getFilter],\n    (contacts, filter) => {\n        const lowerFilter = filter.toLowerCase()\n\n        return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(lowerFilter))\n    })\n\n\nexport default { getContacts, getFilter, getVisibleContacts}"]},"metadata":{},"sourceType":"module"}