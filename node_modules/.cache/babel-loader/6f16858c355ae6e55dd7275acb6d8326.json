{"ast":null,"code":"import axios from \"axios\";\nimport actions from './contacts-actions'; // const fetchContacts = () => dispatch => {\n//     dispatch(actions.fetchContactRequest());\n//\n//     axios.get('/contacts')\n//         .then(({data}) => dispatch(actions.fetchContactSuccess(data)))\n//         .catch(error => dispatch(actions.fetchContactError(error)))\n// }\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(actions.fetchContactRequest());\n\n  try {\n    const {\n      data\n    } = await axios.get('/contacts');\n    dispatch(actions.fetchContactSuccess(data));\n  } catch (error) {\n    dispatch(actions.fetchContactError(error.message));\n  }\n};\n\nconst addContact = item => dispatch => {\n  dispatch(actions.addContactRequest());\n  axios.post('/contacts', item).then(({\n    data\n  }) => dispatch(actions.addContactSuccess(data))).catch(error => dispatch(actions.addContactError(error.message)));\n};\n\nconst delContact = id => dispatch => {\n  dispatch(actions.delContactRequest());\n  axios.delete(`/contacts/${id}`).then(() => dispatch(actions.delContactSuccess(id))).catch(error => dispatch(actions.delContactError(error.message)));\n};\n\nexport default {\n  addContact,\n  delContact,\n  fetchContacts\n};","map":{"version":3,"sources":["/Users/finnegan/projects/projects/goit/react/goit-react-hw-08-phonebook/src/redux/contacts/contacts-operations.js"],"names":["axios","actions","fetchContacts","dispatch","fetchContactRequest","data","get","fetchContactSuccess","error","fetchContactError","message","addContact","item","addContactRequest","post","then","addContactSuccess","catch","addContactError","delContact","id","delContactRequest","delete","delContactSuccess","delContactError"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,oBAApB,C,CAOA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,aAAa,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC1CA,EAAAA,QAAQ,CAACF,OAAO,CAACG,mBAAR,EAAD,CAAR;;AAEA,MAAI;AACA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAML,KAAK,CAACM,GAAN,CAAU,WAAV,CAArB;AACAH,IAAAA,QAAQ,CAACF,OAAO,CAACM,mBAAR,CAA4BF,IAA5B,CAAD,CAAR;AACH,GAHD,CAGE,OAAOG,KAAP,EAAc;AACZL,IAAAA,QAAQ,CAACF,OAAO,CAACQ,iBAAR,CAA0BD,KAAK,CAACE,OAAhC,CAAD,CAAR;AACH;AACJ,CATD;;AAaA,MAAMC,UAAU,GAAGC,IAAI,IAAIT,QAAQ,IAAI;AACnCA,EAAAA,QAAQ,CAACF,OAAO,CAACY,iBAAR,EAAD,CAAR;AAEAb,EAAAA,KAAK,CACAc,IADL,CACU,WADV,EACuBF,IADvB,EAEKG,IAFL,CAEU,CAAC;AAAEV,IAAAA;AAAF,GAAD,KAAcF,QAAQ,CAACF,OAAO,CAACe,iBAAR,CAA0BX,IAA1B,CAAD,CAFhC,EAGKY,KAHL,CAGWT,KAAK,IAAIL,QAAQ,CAACF,OAAO,CAACiB,eAAR,CAAwBV,KAAK,CAACE,OAA9B,CAAD,CAH5B;AAIH,CAPD;;AAUA,MAAMS,UAAU,GAAGC,EAAE,IAAIjB,QAAQ,IAAI;AACjCA,EAAAA,QAAQ,CAACF,OAAO,CAACoB,iBAAR,EAAD,CAAR;AAEArB,EAAAA,KAAK,CACAsB,MADL,CACa,aAAYF,EAAG,EAD5B,EAEKL,IAFL,CAEU,MAAMZ,QAAQ,CAACF,OAAO,CAACsB,iBAAR,CAA0BH,EAA1B,CAAD,CAFxB,EAGKH,KAHL,CAGWT,KAAK,IAAIL,QAAQ,CAACF,OAAO,CAACuB,eAAR,CAAwBhB,KAAK,CAACE,OAA9B,CAAD,CAH5B;AAKH,CARD;;AAWA,eAAe;AAACC,EAAAA,UAAD;AAAaQ,EAAAA,UAAb;AAAyBjB,EAAAA;AAAzB,CAAf","sourcesContent":["import axios from \"axios\";\nimport actions from './contacts-actions'\n\n\n\n\n\n\n// const fetchContacts = () => dispatch => {\n//     dispatch(actions.fetchContactRequest());\n//\n//     axios.get('/contacts')\n//         .then(({data}) => dispatch(actions.fetchContactSuccess(data)))\n//         .catch(error => dispatch(actions.fetchContactError(error)))\n// }\n\nconst fetchContacts = () => async dispatch => {\n    dispatch(actions.fetchContactRequest());\n\n    try {\n        const {data} = await axios.get('/contacts')\n        dispatch(actions.fetchContactSuccess(data))\n    } catch (error) {\n        dispatch(actions.fetchContactError(error.message))\n    }\n}\n\n\n\nconst addContact = item => dispatch => {\n    dispatch(actions.addContactRequest());\n\n    axios\n        .post('/contacts', item)\n        .then(({ data }) => dispatch(actions.addContactSuccess(data)))\n        .catch(error => dispatch(actions.addContactError(error.message)));\n}\n\n\nconst delContact = id => dispatch => {\n    dispatch(actions.delContactRequest());\n\n    axios\n        .delete(`/contacts/${id}`)\n        .then(() => dispatch(actions.delContactSuccess(id)))\n        .catch(error => dispatch(actions.delContactError(error.message)))\n\n}\n\n\nexport default {addContact, delContact, fetchContacts}"]},"metadata":{},"sourceType":"module"}