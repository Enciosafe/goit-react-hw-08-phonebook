{"ast":null,"code":"var _jsxFileName = \"/Users/finnegan/projects/projects/goit/react/goit-react-hw-07-phonebook/src/components/ContactForm/ContactForm.js\";\nimport React from \"react\";\nimport InputForm from \"./InputForm/InputForm\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { connect } from \"react-redux\";\nimport { contactOperations } from './../../redux/contacts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ContactForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      number: '',\n      id: '',\n      sex: 'male'\n    };\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.currentTarget;\n      this.setState({\n        [name]: value\n      });\n      this.setState({\n        id: uuidv4()\n      });\n    };\n\n    this.addContact = e => {\n      e.preventDefault();\n      this.props.contacts.some(elem => elem.name === this.state.name) ? alert(`${this.state.name} is already exist in contacts`) : this.props.onSubmit(this.state);\n      this.reset();\n    };\n\n    this.reset = () => {\n      this.setState({\n        name: '',\n        number: '',\n        id: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(InputForm, {\n      state: this.state,\n      handleChange: this.handleChange,\n      addContact: this.addContact,\n      handleSexRadio: this.handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: data => dispatch(contactOperations.addContact(data))\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);","map":{"version":3,"sources":["/Users/finnegan/projects/projects/goit/react/goit-react-hw-07-phonebook/src/components/ContactForm/ContactForm.js"],"names":["React","InputForm","v4","uuidv4","connect","contactOperations","ContactForm","Component","state","name","number","id","sex","handleChange","e","value","currentTarget","setState","addContact","preventDefault","props","contacts","some","elem","alert","onSubmit","reset","render","mapDispatchToProps","dispatch","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,SAAQC,EAAE,IAAIC,MAAd,QAA2B,MAA3B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,iBAAR,QAAgC,wBAAhC;;;AAGA,MAAMC,WAAN,SAA0BN,KAAK,CAACO,SAAhC,CAA0C;AAAA;AAAA;AAAA,SAGtCC,KAHsC,GAG9B;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,MAAM,EAAE,EAFJ;AAGJC,MAAAA,EAAE,EAAC,EAHC;AAIJC,MAAAA,GAAG,EAAE;AAJD,KAH8B;;AAAA,SAUtCC,YAVsC,GAUvBC,CAAC,IAAI;AAChB,YAAM;AAAEL,QAAAA,IAAF;AAAQM,QAAAA;AAAR,UAAiBD,CAAC,CAACE,aAAzB;AACA,WAAKC,QAAL,CAAc;AAAC,SAACR,IAAD,GAAQM;AAAT,OAAd;AACA,WAAKE,QAAL,CAAc;AAACN,QAAAA,EAAE,EAAER,MAAM;AAAX,OAAd;AACH,KAdqC;;AAAA,SAgBtCe,UAhBsC,GAgBzBJ,CAAC,IAAI;AACdA,MAAAA,CAAC,CAACK,cAAF;AAEA,WAAKC,KAAL,CAAWC,QAAX,CAAoBC,IAApB,CAA0BC,IAAI,IAAIA,IAAI,CAACd,IAAL,KAAc,KAAKD,KAAL,CAAWC,IAA3D,IACMe,KAAK,CAAE,GAAE,KAAKhB,KAAL,CAAWC,IAAK,+BAApB,CADX,GAEM,KAAKW,KAAL,CAAWK,QAAX,CAAoB,KAAKjB,KAAzB,CAFN;AAIA,WAAKkB,KAAL;AACH,KAxBqC;;AAAA,SA4BtCA,KA5BsC,GA4B9B,MAAM;AACV,WAAKT,QAAL,CAAc;AACVR,QAAAA,IAAI,EAAE,EADI;AAEVC,QAAAA,MAAM,EAAE,EAFE;AAGVC,QAAAA,EAAE,EAAE;AAHM,OAAd;AAKH,KAlCqC;AAAA;;AAqCtCgB,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,SAAD;AACI,MAAA,KAAK,EAAE,KAAKnB,KADhB;AAEI,MAAA,YAAY,EAAE,KAAKK,YAFvB;AAGI,MAAA,UAAU,EAAE,KAAKK,UAHrB;AAII,MAAA,cAAc,EAAE,KAAKL;AAJzB;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AA9CqC;;AAiD1C,MAAMe,kBAAkB,GAAGC,QAAQ,KAAK;AACpCJ,EAAAA,QAAQ,EAAGK,IAAD,IAAUD,QAAQ,CAACxB,iBAAiB,CAACa,UAAlB,CAA6BY,IAA7B,CAAD;AADQ,CAAL,CAAnC;;AAOA,eAAe1B,OAAO,CAAC,IAAD,EAAOwB,kBAAP,CAAP,CAAkCtB,WAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport InputForm from \"./InputForm/InputForm\";\nimport {v4 as uuidv4} from \"uuid\";\nimport {connect} from \"react-redux\";\nimport {contactOperations} from './../../redux/contacts'\n\n\nclass ContactForm extends React.Component {\n\n\n    state = {\n        name: '',\n        number: '',\n        id:'',\n        sex: 'male'\n    }\n\n    handleChange = e => {\n        const { name, value} = e.currentTarget\n        this.setState({[name]: value})\n        this.setState({id: uuidv4()})\n    }\n\n    addContact = e => {\n        e.preventDefault();\n\n        this.props.contacts.some( elem => elem.name === this.state.name )\n            ? alert(`${this.state.name} is already exist in contacts`)\n            : this.props.onSubmit(this.state)\n\n        this.reset()\n    }\n\n\n\n    reset = () => {\n        this.setState({\n            name: '',\n            number: '',\n            id: ''\n        })\n    }\n\n\n    render() {\n        return (\n            <InputForm\n                state={this.state}\n                handleChange={this.handleChange}\n                addContact={this.addContact}\n                handleSexRadio={this.handleChange}\n            />\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    onSubmit: (data) => dispatch(contactOperations.addContact(data))\n})\n\n\n\n\nexport default connect(null, mapDispatchToProps)(ContactForm)"]},"metadata":{},"sourceType":"module"}