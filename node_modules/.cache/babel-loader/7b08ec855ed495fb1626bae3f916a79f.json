{"ast":null,"code":"var _jsxFileName = \"/Users/finnegan/projects/projects/goit/react/goit-react-hw-07-phonebook/src/App.js\";\nimport React from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport contactsOperations from './redux/contacts/contacts-operations';\nimport contactSelectors from './redux/contacts/contacts-selectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        contacts: this.props.contacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  contacts: contactSelectors.getContacts(state),\n  filter: contactSelectors.getFilter(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\nApp.propTypes = {\n  filter: PropTypes.string,\n  contacts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string,\n    sex: PropTypes.string.isRequired\n  }))\n};","map":{"version":3,"sources":["/Users/finnegan/projects/projects/goit/react/goit-react-hw-07-phonebook/src/App.js"],"names":["React","ContactForm","ContactList","Filter","PropTypes","connect","contactsOperations","contactSelectors","App","Component","componentDidMount","props","fetchContacts","render","contacts","mapStateToProps","state","getContacts","filter","getFilter","mapDispatchToProps","dispatch","propTypes","string","arrayOf","shape","id","isRequired","name","number","sex"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,kBAAP,MAA+B,sCAA/B;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;;;;AAMA,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAG9BC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWC,aAAX;AACH;;AAEDC,EAAAA,MAAM,GACN;AACI,wBAAO;AAAA,8BACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADO,eAEH,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFG,eAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHG,eAIH,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAJG,eAKH,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cALG;AAAA,oBAAP;AAOL;;AAhB+B;;AAmBlC,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BF,EAAAA,QAAQ,EAAEP,gBAAgB,CAACU,WAAjB,CAA6BD,KAA7B,CADoB;AAE9BE,EAAAA,MAAM,EAAEX,gBAAgB,CAACY,SAAjB,CAA2BH,KAA3B;AAFsB,CAAL,CAA7B;;AAMA,MAAMI,kBAAkB,GAAGC,QAAQ,KAAK;AACpCT,EAAAA,aAAa,EAAE,MAAMS,QAAQ,CAACf,kBAAkB,CAACM,aAAnB,EAAD;AADO,CAAL,CAAnC;;AAKA,eAAeP,OAAO,CAACU,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CZ,GAA7C,CAAf;AAGAA,GAAG,CAACc,SAAJ,GAAgB;AACZJ,EAAAA,MAAM,EAAEd,SAAS,CAACmB,MADN;AAEZT,EAAAA,QAAQ,EAAEV,SAAS,CAACoB,OAAV,CACNpB,SAAS,CAACqB,KAAV,CAAgB;AACZC,IAAAA,EAAE,EAAEtB,SAAS,CAACmB,MAAV,CAAiBI,UADT;AAEZC,IAAAA,IAAI,EAAExB,SAAS,CAACmB,MAAV,CAAiBI,UAFX;AAGZE,IAAAA,MAAM,EAAEzB,SAAS,CAACmB,MAHN;AAIZO,IAAAA,GAAG,EAAE1B,SAAS,CAACmB,MAAV,CAAiBI;AAJV,GAAhB,CADM;AAFE,CAAhB","sourcesContent":["import React from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport contactsOperations from './redux/contacts/contacts-operations'\nimport contactSelectors from './redux/contacts/contacts-selectors'\n\n\n\n\n\nclass App extends React.Component {\n\n\n    componentDidMount() {\n        this.props.fetchContacts()\n    }\n\n    render()\n    {\n        return <>\n        <h1>Phonebook</h1>\n            <ContactForm contacts={this.props.contacts}/>\n            <h2>Contacts</h2>\n            <Filter/>\n            <ContactList/>\n        </>\n  }\n}\n\nconst mapStateToProps = state => ({\n    contacts: contactSelectors.getContacts(state),\n    filter: contactSelectors.getFilter(state),\n})\n\n\nconst mapDispatchToProps = dispatch => ({\n    fetchContacts: () => dispatch(contactsOperations.fetchContacts())\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\nApp.propTypes = {\n    filter: PropTypes.string,\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string,\n            sex: PropTypes.string.isRequired\n        })\n    )\n};\n\n\n"]},"metadata":{},"sourceType":"module"}