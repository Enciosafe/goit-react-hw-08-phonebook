{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\nimport axios from \"axios\";\nconst {\n  addContactSuccess,\n  delContactSuccess,\n  changeFilter\n} = actions; // const KEY = 'contacts'\n// const data = window.localStorage.getItem(KEY) || '[]';\n// const initialItems = JSON.parse(data)\n\naxios.defaults.baseURL = 'http://localhost:3000/';\nconst data = {};\naxios.get('/contacts').then(response => data.push(response.data));\nconsole.log(data);\nconst contacts = createReducer([], {\n  [addContactSuccess]: (state, {\n    payload\n  }) => [...state, payload],\n  [delContactSuccess]: (state, {\n    payload\n  }) => state.filter(contact => contact.id !== payload)\n});\nconst filter = createReducer('', {\n  [changeFilter]: (_, {\n    payload\n  }) => payload\n});\nexport default combineReducers({\n  contacts,\n  filter\n}); // const contacts = (state = initialItems, {type, payload}) => {\n//     switch (type) {\n//         case types.ADD:\n//             return [...state, payload]\n//         case types.DEL:\n//             return state.filter(contact => contact.id !== payload)\n//         default:\n//             return state\n//\n//     }\n// }\n// const filter = (state = '', {type, payload}) => {\n//     switch (type) {\n//         case types.FILTER:\n//             return payload\n//         default:\n//             return state\n//\n//     }\n// }","map":{"version":3,"sources":["/Users/finnegan/projects/projects/goit/react/goit-react-hw-07-phonebook/src/redux/contacts/contacts-reducer.js"],"names":["combineReducers","createReducer","actions","axios","addContactSuccess","delContactSuccess","changeFilter","defaults","baseURL","data","get","then","response","push","console","log","contacts","state","payload","filter","contact","id","_"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,OAA9B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAM;AAACC,EAAAA,iBAAD;AAAoBC,EAAAA,iBAApB;AAAuCC,EAAAA;AAAvC,IAAuDJ,OAA7D,C,CAGA;AACA;AACA;;AACAC,KAAK,CAACI,QAAN,CAAeC,OAAf,GAAyB,wBAAzB;AACA,MAAMC,IAAI,GAAG,EAAb;AACAN,KAAK,CAACO,GAAN,CAAU,WAAV,EAAuBC,IAAvB,CAA4BC,QAAQ,IAAIH,IAAI,CAACI,IAAL,CAAUD,QAAQ,CAACH,IAAnB,CAAxC;AACAK,OAAO,CAACC,GAAR,CAAYN,IAAZ;AAIA,MAAMO,QAAQ,GAAGf,aAAa,CAAC,EAAD,EAAK;AAC/B,GAACG,iBAAD,GAAqB,CAACa,KAAD,EAAQ;AAACC,IAAAA;AAAD,GAAR,KAAsB,CAAC,GAAGD,KAAJ,EAAWC,OAAX,CADZ;AAE/B,GAACb,iBAAD,GAAqB,CAACY,KAAD,EAAQ;AAACC,IAAAA;AAAD,GAAR,KAAsBD,KAAK,CAACE,MAAN,CAAaC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeH,OAAvC;AAFZ,CAAL,CAA9B;AAMA,MAAMC,MAAM,GAAGlB,aAAa,CAAC,EAAD,EAAK;AAC7B,GAACK,YAAD,GAAgB,CAACgB,CAAD,EAAI;AAACJ,IAAAA;AAAD,GAAJ,KAAkBA;AADL,CAAL,CAA5B;AAIA,eAAelB,eAAe,CAAC;AAC3BgB,EAAAA,QAD2B;AAE3BG,EAAAA;AAF2B,CAAD,CAA9B,C,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {combineReducers} from \"redux\";\nimport { createReducer } from '@reduxjs/toolkit'\nimport actions from './contacts-actions'\nimport axios from \"axios\";\n\nconst {addContactSuccess, delContactSuccess, changeFilter} = actions\n\n\n// const KEY = 'contacts'\n// const data = window.localStorage.getItem(KEY) || '[]';\n// const initialItems = JSON.parse(data)\naxios.defaults.baseURL = 'http://localhost:3000/'\nconst data = {};\naxios.get('/contacts').then(response => data.push(response.data))\nconsole.log(data)\n\n\n\nconst contacts = createReducer([], {\n    [addContactSuccess]: (state, {payload}) => [...state, payload],\n    [delContactSuccess]: (state, {payload}) => state.filter(contact => contact.id !== payload),\n})\n\n\nconst filter = createReducer('', {\n    [changeFilter]: (_, {payload}) => payload,\n})\n\nexport default combineReducers({\n    contacts,\n    filter,\n})\n\n\n// const contacts = (state = initialItems, {type, payload}) => {\n//     switch (type) {\n//         case types.ADD:\n//             return [...state, payload]\n//         case types.DEL:\n//             return state.filter(contact => contact.id !== payload)\n//         default:\n//             return state\n//\n//     }\n// }\n// const filter = (state = '', {type, payload}) => {\n//     switch (type) {\n//         case types.FILTER:\n//             return payload\n//         default:\n//             return state\n//\n//     }\n// }\n\n"]},"metadata":{},"sourceType":"module"}