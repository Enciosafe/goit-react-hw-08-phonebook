{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\nconst {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  delContact,\n  changeFilter\n} = actions; // const KEY = 'contacts'\n// const data = window.localStorage.getItem(KEY) || '[]';\n// const initialItems = JSON.parse(data)\n\nconst contacts = createReducer([], {\n  addContactSuccess: (state, {\n    payload\n  }) => [...state, payload],\n  [delContact]: (state, {\n    payload\n  }) => state.filter(contact => contact.id !== payload)\n});\nconst filter = createReducer('', {\n  [changeFilter]: (_, {\n    payload\n  }) => payload\n});\nexport default combineReducers({\n  contacts,\n  filter\n}); // const contacts = (state = initialItems, {type, payload}) => {\n//     switch (type) {\n//         case types.ADD:\n//             return [...state, payload]\n//         case types.DEL:\n//             return state.filter(contact => contact.id !== payload)\n//         default:\n//             return state\n//\n//     }\n// }\n// const filter = (state = '', {type, payload}) => {\n//     switch (type) {\n//         case types.FILTER:\n//             return payload\n//         default:\n//             return state\n//\n//     }\n// }","map":{"version":3,"sources":["/Users/finnegan/projects/projects/goit/react/goit-react-hw-07-phonebook/src/redux/contacts/contacts-reducer.js"],"names":["combineReducers","createReducer","actions","addContactRequest","addContactSuccess","addContactError","delContact","changeFilter","contacts","state","payload","filter","contact","id","_"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,OAA9B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,MAAM;AAACC,EAAAA,iBAAD;AAAoBC,EAAAA,iBAApB;AAAuCC,EAAAA,eAAvC;AAAwDC,EAAAA,UAAxD;AAAoEC,EAAAA;AAApE,IAAoFL,OAA1F,C,CAGA;AACA;AACA;;AAGA,MAAMM,QAAQ,GAAGP,aAAa,CAAC,EAAD,EAAK;AAC/BG,EAAAA,iBAAiB,EAAE,CAACK,KAAD,EAAQ;AAACC,IAAAA;AAAD,GAAR,KAAsB,CAAC,GAAGD,KAAJ,EAAWC,OAAX,CADV;AAE/B,GAACJ,UAAD,GAAc,CAACG,KAAD,EAAQ;AAACC,IAAAA;AAAD,GAAR,KAAsBD,KAAK,CAACE,MAAN,CAAaC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeH,OAAvC;AAFL,CAAL,CAA9B;AAMA,MAAMC,MAAM,GAAGV,aAAa,CAAC,EAAD,EAAK;AAC7B,GAACM,YAAD,GAAgB,CAACO,CAAD,EAAI;AAACJ,IAAAA;AAAD,GAAJ,KAAkBA;AADL,CAAL,CAA5B;AAIA,eAAeV,eAAe,CAAC;AAC3BQ,EAAAA,QAD2B;AAE3BG,EAAAA;AAF2B,CAAD,CAA9B,C,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {combineReducers} from \"redux\";\nimport { createReducer } from '@reduxjs/toolkit'\nimport actions from './contacts-actions'\n\nconst {addContactRequest, addContactSuccess, addContactError, delContact, changeFilter} = actions\n\n\n// const KEY = 'contacts'\n// const data = window.localStorage.getItem(KEY) || '[]';\n// const initialItems = JSON.parse(data)\n\n\nconst contacts = createReducer([], {\n    addContactSuccess: (state, {payload}) => [...state, payload],\n    [delContact]: (state, {payload}) => state.filter(contact => contact.id !== payload),\n})\n\n\nconst filter = createReducer('', {\n    [changeFilter]: (_, {payload}) => payload,\n})\n\nexport default combineReducers({\n    contacts,\n    filter,\n})\n\n\n// const contacts = (state = initialItems, {type, payload}) => {\n//     switch (type) {\n//         case types.ADD:\n//             return [...state, payload]\n//         case types.DEL:\n//             return state.filter(contact => contact.id !== payload)\n//         default:\n//             return state\n//\n//     }\n// }\n// const filter = (state = '', {type, payload}) => {\n//     switch (type) {\n//         case types.FILTER:\n//             return payload\n//         default:\n//             return state\n//\n//     }\n// }\n\n"]},"metadata":{},"sourceType":"module"}