{"ast":null,"code":"import _defineProperty from\"/Users/finnegan/projects/projects/goit/react/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _toConsumableArray from\"/Users/finnegan/projects/projects/goit/react/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";var _createReducer;import{combineReducers}from\"redux\";import{createReducer}from'@reduxjs/toolkit';import actions from'./contacts-actions';var addContactSuccess=actions.addContactSuccess,delContactSuccess=actions.delContactSuccess,changeFilter=actions.changeFilter,fetchContactSuccess=actions.fetchContactSuccess;var contacts=createReducer([],(_createReducer={},_defineProperty(_createReducer,fetchContactSuccess,function(_,_ref){var payload=_ref.payload;return payload;}),_defineProperty(_createReducer,addContactSuccess,function(state,_ref2){var payload=_ref2.payload;return[].concat(_toConsumableArray(state),[payload]);}),_defineProperty(_createReducer,delContactSuccess,function(state,_ref3){var payload=_ref3.payload;return state.filter(function(contact){return contact.id!==payload;});}),_createReducer));var filter=createReducer('',_defineProperty({},changeFilter,function(_,_ref4){var payload=_ref4.payload;return payload;}));export default combineReducers({contacts:contacts,filter:filter});// const contacts = (state = initialItems, {type, payload}) => {\n//     switch (type) {\n//         case types.ADD:\n//             return [...state, payload]\n//         case types.DEL:\n//             return state.filter(contact => contact.id !== payload)\n//         default:\n//             return state\n//\n//     }\n// }\n// const filter = (state = '', {type, payload}) => {\n//     switch (type) {\n//         case types.FILTER:\n//             return payload\n//         default:\n//             return state\n//\n//     }\n// }","map":{"version":3,"sources":["/Users/finnegan/projects/projects/goit/react/goit-react-hw-08-phonebook/src/redux/contacts/contacts-reducer.js"],"names":["combineReducers","createReducer","actions","addContactSuccess","delContactSuccess","changeFilter","fetchContactSuccess","contacts","_","payload","state","filter","contact","id"],"mappings":"iVAAA,OAAQA,eAAR,KAA8B,OAA9B,CACA,OAASC,aAAT,KAA8B,kBAA9B,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CAGA,GAAOC,CAAAA,iBAAP,CAAkFD,OAAlF,CAAOC,iBAAP,CAA0BC,iBAA1B,CAAkFF,OAAlF,CAA0BE,iBAA1B,CAA6CC,YAA7C,CAAkFH,OAAlF,CAA6CG,YAA7C,CAA2DC,mBAA3D,CAAkFJ,OAAlF,CAA2DI,mBAA3D,CAIA,GAAMC,CAAAA,QAAQ,CAAGN,aAAa,CAAC,EAAD,mDACzBK,mBADyB,CACH,SAACE,CAAD,UAAKC,CAAAA,OAAL,MAAKA,OAAL,OAAkBA,CAAAA,OAAlB,EADG,iCAEzBN,iBAFyB,CAEL,SAACO,KAAD,WAASD,CAAAA,OAAT,OAASA,OAAT,oCAA0BC,KAA1B,GAAiCD,OAAjC,IAFK,iCAGzBL,iBAHyB,CAGL,SAACM,KAAD,WAASD,CAAAA,OAAT,OAASA,OAAT,OAAsBC,CAAAA,KAAK,CAACC,MAAN,CAAa,SAAAC,OAAO,QAAIA,CAAAA,OAAO,CAACC,EAAR,GAAeJ,OAAnB,EAApB,CAAtB,EAHK,kBAA9B,CAOA,GAAME,CAAAA,MAAM,CAAGV,aAAa,CAAC,EAAD,oBACvBI,YADuB,CACR,SAACG,CAAD,WAAKC,CAAAA,OAAL,OAAKA,OAAL,OAAkBA,CAAAA,OAAlB,EADQ,EAA5B,CAIA,cAAeT,CAAAA,eAAe,CAAC,CAC3BO,QAAQ,CAARA,QAD2B,CAE3BI,MAAM,CAANA,MAF2B,CAAD,CAA9B,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {combineReducers} from \"redux\";\nimport { createReducer } from '@reduxjs/toolkit'\nimport actions from './contacts-actions'\n\n\nconst {addContactSuccess, delContactSuccess, changeFilter, fetchContactSuccess} = actions\n\n\n\nconst contacts = createReducer([], {\n    [fetchContactSuccess]: (_, {payload}) => payload,\n    [addContactSuccess]: (state, {payload}) => [...state, payload],\n    [delContactSuccess]: (state, {payload}) => state.filter(contact => contact.id !== payload),\n})\n\n\nconst filter = createReducer('', {\n    [changeFilter]: (_, {payload}) => payload,\n})\n\nexport default combineReducers({\n    contacts,\n    filter,\n})\n\n\n// const contacts = (state = initialItems, {type, payload}) => {\n//     switch (type) {\n//         case types.ADD:\n//             return [...state, payload]\n//         case types.DEL:\n//             return state.filter(contact => contact.id !== payload)\n//         default:\n//             return state\n//\n//     }\n// }\n// const filter = (state = '', {type, payload}) => {\n//     switch (type) {\n//         case types.FILTER:\n//             return payload\n//         default:\n//             return state\n//\n//     }\n// }\n\n"]},"metadata":{},"sourceType":"module"}