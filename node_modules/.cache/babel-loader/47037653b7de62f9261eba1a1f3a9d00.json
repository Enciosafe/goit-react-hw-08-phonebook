{"ast":null,"code":"import { contactsReducer } from \"./contacts\";\nimport { authReducer } from \"./auth\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER, persistStore, persistReducer } from \"redux-persist\";\nimport storage from 'redux-persist/lib/storage';\nconst middleware = [];\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token']\n};\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer\n  }\n});\nconst persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["/Users/finnegan/projects/projects/goit/react/goit-react-hw-08-phonebook/src/redux/store.js"],"names":["contactsReducer","authReducer","configureStore","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistStore","persistReducer","storage","middleware","authPersistConfig","key","whitelist","store","reducer","auth","contacts","persistor"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,YAA9B;AACA,SAAQC,WAAR,QAA0B,QAA1B;AACA,SAAQC,cAAR,QAA6B,kBAA7B;AACA,SAAQC,KAAR,EAAeC,SAAf,EAA0BC,KAA1B,EAAiCC,OAAjC,EAA0CC,KAA1C,EAAiDC,QAAjD,EAA2DC,YAA3D,EAAyEC,cAAzE,QAA8F,eAA9F;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAGA,MAAMC,UAAU,GAAG,EAAnB;AAEA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,GAAG,EAAE,MADiB;AAEtBH,EAAAA,OAFsB;AAGtBI,EAAAA,SAAS,EAAE,CAAC,OAAD;AAHW,CAA1B;AAMA,MAAMC,KAAK,GAAGd,cAAc,CAAC;AACzBe,EAAAA,OAAO,EAAE;AACLC,IAAAA,IAAI,EAAER,cAAc,CAACG,iBAAD,EAAoBZ,WAApB,CADf;AAELkB,IAAAA,QAAQ,EAAEnB;AAFL;AADgB,CAAD,CAA5B;AASA,MAAMoB,SAAS,GAAGX,YAAY,CAACO,KAAD,CAA9B;AAEA,eAAe;AAACA,EAAAA,KAAD;AAAQI,EAAAA;AAAR,CAAf","sourcesContent":["import {contactsReducer} from \"./contacts\"\nimport {authReducer} from \"./auth\";\nimport {configureStore} from \"@reduxjs/toolkit\";\nimport {FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER, persistStore, persistReducer} from \"redux-persist\";\nimport storage from 'redux-persist/lib/storage'\n\n\nconst middleware = []\n\nconst authPersistConfig = {\n    key: 'auth',\n    storage,\n    whitelist: ['token']\n}\n\nconst store = configureStore({\n    reducer: {\n        auth: persistReducer(authPersistConfig, authReducer),\n        contacts: contactsReducer,\n    }\n})\n\n\n\nconst persistor = persistStore(store)\n\nexport default {store, persistor}"]},"metadata":{},"sourceType":"module"}